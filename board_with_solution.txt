currentGameDescriptor : GameDescriptor
currentGameDescriptor =
    { inputs =
        [ InputDescriptor "A" "Green" 5
        ]
    , wheels =
        [ WheelDescriptor "1" 0 [ 45, 135, 225, 315 ]
        , WheelDescriptor "2" 0 [ 0, 120, 240 ]
        , WheelDescriptor "3" 0 [ 90, 270 ]
        ]
    , outputs =
        [ OutputDescriptor "X"
        ]
    , connections =
        [ ConnectionDescriptor "A" "1" 115
        , ConnectionDescriptor "1" "2" 230
        , ConnectionDescriptor "2" "3" 180
        , ConnectionDescriptor "3" "X" 160
        ]
    }

a = Elm.Main.fullscreen()
a.ports.statusOutput.subscribe(e=>console.log(e[0].outputCount))

a.ports.rotationInput.send({identifier : "1", angle: 360})
a.ports.rotationInput.send({identifier : "1", angle: 185})

a.ports.rotationInput.send({identifier : "2", angle: 360})
a.ports.rotationInput.send({identifier : "2", angle: 180})

a.ports.rotationInput.send({identifier : "3", angle: 360})

a.ports.rotationInput.send({identifier : "1", angle: 270})

a.ports.rotationInput.send({identifier : "1", angle: 90})
a.ports.rotationInput.send({identifier : "2", angle: 360})
a.ports.rotationInput.send({identifier : "3", angle: 360})

a.ports.rotationInput.send({identifier : "1", angle: 90})
a.ports.rotationInput.send({identifier : "2", angle: 360})
a.ports.rotationInput.send({identifier : "3", angle: 360})

a.ports.rotationInput.send({identifier : "1", angle: 90})
a.ports.rotationInput.send({identifier : "2", angle: 360})
a.ports.rotationInput.send({identifier : "3", angle: 360})

a.ports.rotationInput.send({identifier : "1", angle: 90})
a.ports.rotationInput.send({identifier : "2", angle: 360})
a.ports.rotationInput.send({identifier : "3", angle: 90})

a.ports.rotationInput.send({identifier : "2", angle: -120})
a.ports.rotationInput.send({identifier : "3", angle: -180})
a.ports.rotationInput.send({identifier : "3", angle: 360})
